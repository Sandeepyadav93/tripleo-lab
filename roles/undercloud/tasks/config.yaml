---
- name: ensure sshd does not rely on gssapi
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^GSSAPIAuthentication yes$'
    replace: 'GSSAPIAuthentication no'
  register: sshd_config

- name: restart sshd upon config change
  service:
    name: sshd
    state: restarted
- name: Set selinux to permissive
  selinux:
    state: permissive
    policy: targeted
  when:
    - disable_selinux|bool

- name: Persist permissive
  when:
    - disable_selinux|bool
  copy:
    dest: /etc/selinux/config
    content: |
      SELINUX=permissive
      SELINUXTYPE=targeted

- name: set hostname properly
  lineinfile:
    dest: /etc/hosts
    line: "127.0.0.1 undercloud.{{ansible_domain}} undercloud localhost localhost.localdomain"
    regexp: '^127\.0\.0\.1'

- name: proxy configurations if required
  when:
    - proxy_host is defined
  block:
    - name: check dnf presence
      stat:
        path: /etc/dnf/dnf.conf
      register: dnf_state

    - name: set proxy for yum
      ini_file:
        backup: true
        path: /etc/yum.conf
        option: proxy
        section: main
        value: "http://{{proxy_host}}"

    - name: inject proxy for dnf
      when:
        - dnf_state.stat.exists
      ini_file:
        backup: true
        path: /etc/dnf/dnf.conf
        option: proxy
        section: main
        value: "http://{{proxy_host}}"

    - name: inject proxy in env
      blockinfile:
        path: /etc/environment
        block: |
          http_proxy=http://{{ proxy_host }}
          https_proxy=http://{{ proxy_host }}
          no_proxy={{ no_proxy }}
          HTTP_PROXY=http://{{ proxy_host }}
          HTTPS_PROXY=http://{{ proxy_host }}
          NO_PROXY={{ no_proxy }}

    - name: create base dir
      file:
        group: root
        mode: 0755
        owner: root
        path: /etc/systemd/system/docker.service.d
        state: directory
    - name: create service file
      copy:
        content: |
          [Service]
          Environment="HTTP_PROXY=http://{{proxy_host}}/"
          Environment="HTTPS_PROXY=http://{{proxy_host}}/"
          Environment="NO_PROXY={{no_proxy}}"
        dest: /etc/systemd/system/docker.service.d/http-proxy.conf
        group: root
        mode: 0644
        owner: root

- name: set delorean repository from upstream
  when:
    - base_image == 'centos'
  import_tasks: "centos-{{ os_version }}.yaml"

- name: do we have a swap file
  stat:
    path: /dev/sdb
  register: swap_on

- name: set fstab entry for swap if needed
  mount:
    backup: true
    path: swap
    src: /dev/sdb
    state: present
    opts: defaults
    fstype: swap
  when:
    - swap_on.stat.exists
    - swap_on.stat.isblk

- name: set up custom repositories
  yum_repository:
    name: "{{ item.name }}"
    description: "{{ item.name }}"
    baseurl: "{{ item.uri }}"
    gpgcheck: "{{ item.gpg |default(omit) }}"
    priority: "{{ item.priority |default(omit) }}"
  loop: "{{ custom_repositories }}"

- name: add static routes for overclouds public endpoints
  when:
    - hostvars['builder']['nat_vm_addr'] is defined
  register: set_overcloud_pub_routes
  template:
    dest: /etc/sysconfig/network-scripts/route-eth0
    src: undercloud-static-routes.j2

- name: add static route to the live system if needed
  when:
    - set_overcloud_pub_routes is defined
    - set_overcloud_pub_routes is changed
  command: ip ro add 10.20.1.0/24 via {{ hostvars['builder']['nat_vm_addr'].stdout|replace('/24','') }} dev eth0

- name: Inject custom PS1
  copy:
    dest: /etc/profile.d/ps1.sh
    content: |
      # Set PS1 to reflect OS version and deploy type
      {% if standalone | default(false) | bool %}
      export PS1='[{{ ansible_facts['distribution'] }}-{{ ansible_facts['distribution_version'] }} - \u@standalone \W]\$ '
      {% else %}
      export PS1='[{{ ansible_facts['distribution'] }}-{{ ansible_facts['distribution_version'] }} - \u@\h \W]\$ '
      {% endif %}
